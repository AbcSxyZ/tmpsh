# definition shell grammar

COMMAND:
	WORD

ESCAPE:
	\

ASSIGNATION:
	ASSIGNATION_EQUAL
	CONCATENATION

ASSIGNATION_EQUAL:
	=

CONCATENATION:
	+=

SEPARATORS_UNAIRE:
	BACKGROUND_JOBS
	END_COMMAND
	NEW_LINE

BACKGROUND_JOBS
	&

END_COMMAND:
	;

# Must be hardcode...
# NEW_LINE:
# 	\n

SEPARATORS_BINAIRE:
	PIPE
	AND
	OR

PIPE:
	|

CMDAND:
	&&

CMDOR:
	||

REDIRECTION_SYMBOL_FILENAME:
	APPEND
	TRUNC
	HEREDOC
	READ_FROM

APPEND:
	>>

TRUNC:
	>

HEREDOC:
	<<

READ_FROM:
	<

REDIRECTION_SYMBOL_FD:
	TRUNC_TO
	TRUNC_TO_NULL
	READ_FROM_FD

TRUNC_TO:
	>&

READ_FROM_FD:
	<&

SUB_PROCESS:
	BRACEPARAM
	SUBSH
	CURSH
	CMDSUBST1
	CMDSUBST2
	CMDSUBST3

BRACEPARAM: # FILE_SUBSTITUTION
	${.}

CMDSUBST1: # STDIN_SUBSTITUTION
	$(.)

CURSH: # GROUP_COMMAND
	{.}

SUBSH: # SUBSHELL_BLOCK
	(.)

CMDSUBST2: # COMMAND_SUBSTITUTION
	>(.)

CMDSUBST3: # VARIABLE_EXPANSION
	<(.)

QUOTES:
	DQUOTES
	QUOTE

DQUOTES:
	"."

QUOTE:
	'.'

RESERVED_WORD:
	IF
	LOOP

IF:
	if.fi

LOOP:
	WHILE DO
	UNTIL DO
	FOR DO

WHILE:
	while

UNTIL:
	until

FOR:
	for

DO:
	do.done
